    << "OVERVIEW: Monad Autograder (c) Jack Toole" << endl
    << "  Monad is a system for grading students' C/C++ code with point-weighted unit" << endl
    << "  tests." << endl
    << "" << endl
    << "USAGE: monad <assignment> [options]" << endl
    << "  Runs the tests for <assignment> (mp1, lab01, ...)" << endl
    << "  '../<assignment>/' must exist" << endl
    << "  If '../<assignment>_tests/' or any necessary library directories do not exist," << endl
    << "  they will be downloaded from SVN" << endl
    << "" << endl
    << "GENERAL OPTIONS:" << endl
    << "  Note: Any option may be negated with --no<option> or --<option>=false" << endl
    << "  Options which default to true are shown negated below" << endl
    << "" << endl
    << "  --noclean               Do not re-copy test cases into sandbox. This improves" << endl
    << "                          performance at the cost of safety" << endl
    << "  --provided              Use <assignment>_provided/ instead of" << endl
    << "                          <assignment>_tests/ for test cases" << endl
    << "  --noupdate              Do not call 'svn update' on the tests and library" << endl
    << "                          directories" << endl
    << "  --verbose               Display detailed test output information for passing" << endl
    << "                          tests" << endl
    << "  --parallel              Compiles code in parallel if possible" << endl
    << "" << endl
    << "INFORMATION OPTIONS:" << endl
    << "  --help                  Display this dialog" << endl
    << "  --help config           Help for writing config files" << endl
    << "  --help tests            Help for writing test cases" << endl
    << "  --info, --version       Display version information" << endl
    << "  --license               Display the license" << endl
    << "" << endl
    << "STAFF OPTIONS:" << endl
    << "  --staff                 Use the staff SVN repository to download test cases." << endl
    << "                          This allows monad to be run by staff without" << endl
    << "                          releasing the test cases to students" << endl
    << "  --solution              Grade <assignment>_solution/ instead of" << endl
    << "                          <assignment>/" << endl
    << "  --newtests              Use <assignment>_newtests/ instead of" << endl
    << "                          <assignment>_tests/ for test cases. This allows new" << endl
    << "                          test cases to be developed without replacing the old" << endl
    << "                          ones for release tests" << endl
